name: CI

on:
  push:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Biome
        uses: biomejs/setup-biome@v2
        with:
          version: latest
      - name: Run Biome
        run: biome ci

  commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - id: tool-versions
        name: Get Tool Versions
        run: |
          for tool in $(cat .tool-versions | awk '{print $1}'); do
            echo "$tool=$(grep "$tool" .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT
          done
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ steps.tool-versions.outputs.bun }}
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lock') }}
      - name: Bun Install
        run: bun install --frozen-lockfile
      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: bun commitlint --last --verbose
      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: bun commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }}

  license-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - id: tool-versions
        name: Get Tool Versions
        run: |
          for tool in $(cat .tool-versions | awk '{print $1}'); do
            echo "$tool=$(grep "$tool" .tool-versions | awk '{print $2}')" >> $GITHUB_OUTPUT
          done
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: ${{ steps.tool-versions.outputs.bun }}
      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-modules-${{ hashFiles('**/bun.lock') }}
      - name: Bun Install
        run: bun install --frozen-lockfile
      - name: Check licenses
        run: bun check-licenses
      - name: Output license check results
        run: cat incompatible-licenses.md || echo "No incompatible licenses found."
